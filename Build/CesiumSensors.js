/**
 * Cesium Sensors - https://github.com/AnalyticalGraphicsInc/cesium-sensors
 *
 * Copyright 2011-2014 Analytical Graphics Inc. and Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium-sensors/blob/master/LICENSE.md for full licensing details.
 */

/**
 * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */

!function(){var e,i,t;!function(r){function n(e,i){return S.call(e,i)}function o(e,i){var t,r,n,o,s,a,l,u,c,h,d,m=i&&i.split("/"),f=g.map,C=f&&f["*"]||{};if(e&&"."===e.charAt(0))if(i){for(m=m.slice(0,m.length-1),e=e.split("/"),s=e.length-1,g.nodeIdCompat&&w.test(e[s])&&(e[s]=e[s].replace(w,"")),e=m.concat(e),c=0;c<e.length;c+=1)if(d=e[c],"."===d)e.splice(c,1),c-=1;else if(".."===d){if(1===c&&(".."===e[2]||".."===e[0]))break;c>0&&(e.splice(c-1,2),c-=2)}e=e.join("/")}else 0===e.indexOf("./")&&(e=e.substring(2));if((m||C)&&f){for(t=e.split("/"),c=t.length;c>0;c-=1){if(r=t.slice(0,c).join("/"),m)for(h=m.length;h>0;h-=1)if(n=f[m.slice(0,h).join("/")],n&&(n=n[r])){o=n,a=c;break}if(o)break;!l&&C&&C[r]&&(l=C[r],u=c)}!o&&l&&(o=l,a=u),o&&(t.splice(0,a,o),e=t.join("/"))}return e}function s(e,i){return function(){return m.apply(r,y.call(arguments,0).concat([e,i]))}}function a(e){return function(i){return o(i,e)}}function l(e){return function(i){p[e]=i}}function u(e){if(n(_,e)){var i=_[e];delete _[e],v[e]=!0,d.apply(r,i)}if(!n(p,e)&&!n(v,e))throw new Error("No "+e);return p[e]}function c(e){var i,t=e?e.indexOf("!"):-1;return t>-1&&(i=e.substring(0,t),e=e.substring(t+1,e.length)),[i,e]}function h(e){return function(){return g&&g.config&&g.config[e]||{}}}var d,m,f,C,p={},_={},g={},v={},S=Object.prototype.hasOwnProperty,y=[].slice,w=/\.js$/;f=function(e,i){var t,r=c(e),n=r[0];return e=r[1],n&&(n=o(n,i),t=u(n)),n?e=t&&t.normalize?t.normalize(e,a(i)):o(e,i):(e=o(e,i),r=c(e),n=r[0],e=r[1],n&&(t=u(n))),{f:n?n+"!"+e:e,n:e,pr:n,p:t}},C={require:function(e){return s(e)},exports:function(e){var i=p[e];return"undefined"!=typeof i?i:p[e]={}},module:function(e){return{id:e,uri:"",exports:p[e],config:h(e)}}},d=function(e,i,t,o){var a,c,h,d,m,g,S=[],y=typeof t;if(o=o||e,"undefined"===y||"function"===y){for(i=!i.length&&t.length?["require","exports","module"]:i,m=0;m<i.length;m+=1)if(d=f(i[m],o),c=d.f,"require"===c)S[m]=C.require(e);else if("exports"===c)S[m]=C.exports(e),g=!0;else if("module"===c)a=S[m]=C.module(e);else if(n(p,c)||n(_,c)||n(v,c))S[m]=u(c);else{if(!d.p)throw new Error(e+" missing "+c);d.p.load(d.n,s(o,!0),l(c),{}),S[m]=p[c]}h=t?t.apply(p[e],S):void 0,e&&(a&&a.exports!==r&&a.exports!==p[e]?p[e]=a.exports:h===r&&g||(p[e]=h))}else e&&(p[e]=t)},e=i=m=function(e,i,t,n,o){if("string"==typeof e)return C[e]?C[e](i):u(f(e,i).f);if(!e.splice){if(g=e,g.deps&&m(g.deps,g.callback),!i)return;i.splice?(e=i,i=t,t=null):e=r}return i=i||function(){},"function"==typeof t&&(t=n,n=o),n?d(r,e,i,t):setTimeout(function(){d(r,e,i,t)},4),m},m.config=function(e){return m(e)},e._defined=p,t=function(e,i,t){i.splice||(t=i,i=[]),n(p,e)||n(_,e)||(_[e]=[e,i,t])},t.amd={jQuery:!0}}(),t("ConicSensorGraphics",["Cesium/Core/defaultValue","Cesium/Core/defined","Cesium/Core/defineProperties","Cesium/Core/DeveloperError","Cesium/Core/Event","Cesium/DataSources/createPropertyDescriptor"],function(e,i,t,r,n,o){"use strict";var s=function(){this._minimumClockAngle=void 0,this._minimumClockAngleSubscription=void 0,this._maximumClockAngle=void 0,this._maximumClockAngleSubscription=void 0,this._innerHalfAngle=void 0,this._innerHalfAngleSubscription=void 0,this._outerHalfAngle=void 0,this._outerHalfAngleSubscription=void 0,this._lateralSurfaceMaterial=void 0,this._lateralSurfaceMaterialSubscription=void 0,this._intersectionColor=void 0,this._intersectionColorSubscription=void 0,this._intersectionWidth=void 0,this._intersectionWidthSubscription=void 0,this._showIntersection=void 0,this._showIntersectionSubscription=void 0,this._radius=void 0,this._radiusSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._definitionChanged=new n};return t(s.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},minimumClockAngle:o("minimumClockAngle"),maximumClockAngle:o("maximumClockAngle"),innerHalfAngle:o("innerHalfAngle"),outerHalfAngle:o("outerHalfAngle"),lateralSurfaceMaterial:o("lateralSurfaceMaterial"),intersectionColor:o("intersectionColor"),intersectionWidth:o("intersectionWidth"),showIntersection:o("showIntersection"),radius:o("radius"),show:o("show")}),s.prototype.clone=function(e){return i(e)||(e=new s),e.show=this.show,e.innerHalfAngle=this.innerHalfAngle,e.outerHalfAngle=this.outerHalfAngle,e.minimumClockAngle=this.minimumClockAngle,e.maximumClockAngle=this.maximumClockAngle,e.radius=this.radius,e.showIntersection=this.showIntersection,e.intersectionColor=this.intersectionColor,e.intersectionWidth=this.intersectionWidth,e.lateralSurfaceMaterial=this.lateralSurfaceMaterial,e},s.prototype.merge=function(i){this.show=e(this.show,i.show),this.innerHalfAngle=e(this.innerHalfAngle,i.innerHalfAngle),this.outerHalfAngle=e(this.outerHalfAngle,i.outerHalfAngle),this.minimumClockAngle=e(this.minimumClockAngle,i.minimumClockAngle),this.maximumClockAngle=e(this.maximumClockAngle,i.maximumClockAngle),this.radius=e(this.radius,i.radius),this.showIntersection=e(this.showIntersection,i.showIntersection),this.intersectionColor=e(this.intersectionColor,i.intersectionColor),this.intersectionWidth=e(this.intersectionWidth,i.intersectionWidth),this.lateralSurfaceMaterial=e(this.lateralSurfaceMaterial,i.lateralSurfaceMaterial)},s}),t("text",{load:function(e){throw new Error("Dynamic load not allowed: "+e)}}),t("text!CustomSensorVolumeFS.glsl",[],function(){return'#ifdef GL_OES_standard_derivatives\r\n    #extension GL_OES_standard_derivatives : enable\r\n#endif  \r\n\r\nuniform bool u_showIntersection;\r\nuniform bool u_showThroughEllipsoid;\r\n\r\nuniform float u_sensorRadius;\r\nuniform float u_normalDirection;\r\n\r\nvarying vec3 v_positionWC;\r\nvarying vec3 v_positionEC;\r\nvarying vec3 v_normalEC;\r\n\r\nvec4 getColor(float sensorRadius, vec3 pointEC)\r\n{\r\n    czm_materialInput materialInput;\r\n    \r\n    vec3 pointMC = (czm_inverseModelView * vec4(pointEC, 1.0)).xyz;                                \r\n    materialInput.st = sensor2dTextureCoordinates(sensorRadius, pointMC);   \r\n    materialInput.str = pointMC / sensorRadius;\r\n    \r\n    vec3 positionToEyeEC = -v_positionEC;\r\n    materialInput.positionToEyeEC = positionToEyeEC;\r\n    \r\n    vec3 normalEC = normalize(v_normalEC);\r\n    materialInput.normalEC = u_normalDirection * normalEC;\r\n    \r\n    czm_material material = czm_getMaterial(materialInput);\r\n    return mix(czm_phong(normalize(positionToEyeEC), material), vec4(material.diffuse, material.alpha), 0.4);\r\n}\r\n\r\nbool isOnBoundary(float value, float epsilon)\r\n{\r\n    float width = getIntersectionWidth();\r\n    float tolerance = width * epsilon;\r\n\r\n#ifdef GL_OES_standard_derivatives\r\n    float delta = max(abs(dFdx(value)), abs(dFdy(value)));\r\n    float pixels = width * delta;\r\n    float temp = abs(value);\r\n    // There are a couple things going on here.\r\n    // First we test the value at the current fragment to see if it is within the tolerance.\r\n    // We also want to check if the value of an adjacent pixel is within the tolerance,\r\n    // but we don\'t want to admit points that are obviously not on the surface.\r\n    // For example, if we are looking for "value" to be close to 0, but value is 1 and the adjacent value is 2,\r\n    // then the delta would be 1 and "temp - delta" would be "1 - 1" which is zero even though neither of\r\n    // the points is close to zero.\r\n    return temp < tolerance && temp < pixels || (delta < 10.0 * tolerance && temp - delta < tolerance && temp < pixels);\r\n#else\r\n    return abs(value) < tolerance;\r\n#endif\r\n}\r\n\r\nvec4 shade(bool isOnBoundary)\r\n{\r\n    if (u_showIntersection && isOnBoundary)\r\n    {\r\n        return getIntersectionColor();\r\n    }\r\n    return getColor(u_sensorRadius, v_positionEC);\r\n}\r\n\r\nfloat ellipsoidSurfaceFunction(czm_ellipsoid ellipsoid, vec3 point)\r\n{\r\n    vec3 scaled = ellipsoid.inverseRadii * point;\r\n    return dot(scaled, scaled) - 1.0;\r\n}\r\n\r\nvoid main()\r\n{\r\n    vec3 sensorVertexWC = czm_model[3].xyz;      // (0.0, 0.0, 0.0) in model coordinates\r\n    vec3 sensorVertexEC = czm_modelView[3].xyz;  // (0.0, 0.0, 0.0) in model coordinates\r\n\r\n    czm_ellipsoid ellipsoid = czm_getWgs84EllipsoidEC();\r\n    float ellipsoidValue = ellipsoidSurfaceFunction(ellipsoid, v_positionWC);\r\n\r\n    // Occluded by the ellipsoid?\r\n	if (!u_showThroughEllipsoid)\r\n	{\r\n	    // Discard if in the ellipsoid    \r\n	    // PERFORMANCE_IDEA: A coarse check for ellipsoid intersection could be done on the CPU first.\r\n	    if (ellipsoidValue < 0.0)\r\n	    {\r\n            discard;\r\n	    }\r\n\r\n	    // Discard if in the sensor\'s shadow\r\n	    if (inSensorShadow(sensorVertexWC, ellipsoid, v_positionWC))\r\n	    {\r\n	        discard;\r\n	    }\r\n    }\r\n\r\n    // Discard if not in the sensor\'s sphere\r\n    // PERFORMANCE_IDEA: We can omit this check if the radius is Number.POSITIVE_INFINITY.\r\n    if (distance(v_positionEC, sensorVertexEC) > u_sensorRadius)\r\n    {\r\n        discard;\r\n    }\r\n    \r\n    // Notes: Each surface functions should have an associated tolerance based on the floating point error.\r\n    bool isOnEllipsoid = isOnBoundary(ellipsoidValue, czm_epsilon3);\r\n    gl_FragColor = shade(isOnEllipsoid);\r\n}\r\n'}),t("text!CustomSensorVolumeVS.glsl",[],function(){return"attribute vec4 position;\r\nattribute vec3 normal;\r\n\r\nvarying vec3 v_positionWC;\r\nvarying vec3 v_positionEC;\r\nvarying vec3 v_normalEC;\r\n\r\nvoid main()\r\n{\r\n    gl_Position = czm_modelViewProjection * position;\r\n    v_positionWC = (czm_model * position).xyz;\r\n    v_positionEC = (czm_modelView * position).xyz;\r\n    v_normalEC = czm_normal * normal;\r\n}"}),t("text!SensorVolume.glsl",[],function(){return"uniform vec4 u_intersectionColor;\r\nuniform float u_intersectionWidth;\r\n\r\nbool inSensorShadow(vec3 coneVertexWC, czm_ellipsoid ellipsoidEC, vec3 pointWC)\r\n{\r\n    // Diagonal matrix from the unscaled ellipsoid space to the scaled space.    \r\n    vec3 D = ellipsoidEC.inverseRadii;\r\n\r\n    // Sensor vertex in the scaled ellipsoid space\r\n    vec3 q = D * coneVertexWC;\r\n    float qMagnitudeSquared = dot(q, q);\r\n    float test = qMagnitudeSquared - 1.0;\r\n    \r\n    // Sensor vertex to fragment vector in the ellipsoid's scaled space\r\n    vec3 temp = D * pointWC - q;\r\n    float d = dot(temp, q);\r\n    \r\n    // Behind silhouette plane and inside silhouette cone\r\n    return (d < -test) && (d / length(temp) < -sqrt(test));\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nvec4 getIntersectionColor()\r\n{\r\n    return u_intersectionColor;\r\n}\r\n\r\nfloat getIntersectionWidth()\r\n{\r\n    return u_intersectionWidth;\r\n}\r\n\r\nvec2 sensor2dTextureCoordinates(float sensorRadius, vec3 pointMC)\r\n{\r\n    // (s, t) both in the range [0, 1]\r\n    float t = pointMC.z / sensorRadius;\r\n    float s = 1.0 + (atan(pointMC.y, pointMC.x) / czm_twoPi);\r\n    s = s - floor(s);\r\n    \r\n    return vec2(s, t);\r\n}\r\n"}),t("CustomSensorVolume",["Cesium/Core/BoundingSphere","Cesium/Core/Cartesian3","Cesium/Core/Color","Cesium/Core/combine","Cesium/Core/ComponentDatatype","Cesium/Core/defaultValue","Cesium/Core/defined","Cesium/Core/defineProperties","Cesium/Core/destroyObject","Cesium/Core/DeveloperError","Cesium/Core/Matrix4","Cesium/Core/PrimitiveType","Cesium/Renderer/BufferUsage","Cesium/Renderer/createShaderSource","Cesium/Renderer/DrawCommand","text!./CustomSensorVolumeFS.glsl","text!./CustomSensorVolumeVS.glsl","text!./SensorVolume.glsl","Cesium/Scene/BlendingState","Cesium/Scene/CullFace","Cesium/Scene/Material","Cesium/Scene/Pass","Cesium/Scene/SceneMode"],function(e,i,t,r,n,o,s,a,l,u,c,h,d,m,f,C,p,_,g,v,S,y,w){"use strict";function A(t){for(var r=t._directions,n=r.length,o=new Float32Array(3*n),s=isFinite(t.radius)?t.radius:E,a=[i.ZERO],l=n-2,u=n-1,c=0;n>c;l=u++,u=c++){var h=i.fromSpherical(r[l],I),d=i.fromSpherical(r[u],V),m=i.fromSpherical(r[c],P),f=Math.max(i.angleBetween(h,d),i.angleBetween(d,m)),C=s/Math.cos(.5*f),p=i.multiplyByScalar(d,C,new i);o[3*u]=p.x,o[3*u+1]=p.y,o[3*u+2]=p.z,a.push(p)}return e.fromPoints(a,t._boundingSphere),o}function M(e,t){for(var r=A(e),o=e._directions.length,s=new Float32Array(18*o),a=0,l=o-1,u=0;o>u;l=u++){var c=new i(r[3*l],r[3*l+1],r[3*l+2]),h=new i(r[3*u],r[3*u+1],r[3*u+2]),m=i.normalize(i.cross(h,c,T),T);s[a++]=0,s[a++]=0,s[a++]=0,s[a++]=m.x,s[a++]=m.y,s[a++]=m.z,s[a++]=h.x,s[a++]=h.y,s[a++]=h.z,s[a++]=m.x,s[a++]=m.y,s[a++]=m.z,s[a++]=c.x,s[a++]=c.y,s[a++]=c.z,s[a++]=m.x,s[a++]=m.y,s[a++]=m.z}var f=t.createVertexBuffer(new Float32Array(s),d.STATIC_DRAW),C=6*Float32Array.BYTES_PER_ELEMENT,p=[{index:x.position,vertexBuffer:f,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:0,strideInBytes:C},{index:x.normal,vertexBuffer:f,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:3*Float32Array.BYTES_PER_ELEMENT,strideInBytes:C}];return t.createVertexArray(p)}var x={position:0,normal:1},E=5906376272e3,b=function(i){i=o(i,o.EMPTY_OBJECT),this._pickId=void 0,this._pickPrimitive=o(i._pickPrimitive,this),this._frontFaceColorCommand=new f,this._backFaceColorCommand=new f,this._pickCommand=new f,this._boundingSphere=new e,this._boundingSphereWC=new e,this._frontFaceColorCommand.primitiveType=h.TRIANGLES,this._frontFaceColorCommand.boundingVolume=this._boundingSphereWC,this._frontFaceColorCommand.owner=this,this._backFaceColorCommand.primitiveType=this._frontFaceColorCommand.primitiveType,this._backFaceColorCommand.boundingVolume=this._frontFaceColorCommand.boundingVolume,this._backFaceColorCommand.owner=this,this._pickCommand.primitiveType=this._frontFaceColorCommand.primitiveType,this._pickCommand.boundingVolume=this._frontFaceColorCommand.boundingVolume,this._pickCommand.owner=this,this.show=o(i.show,!0),this.showIntersection=o(i.showIntersection,!0),this.showThroughEllipsoid=o(i.showThroughEllipsoid,!1),this._showThroughEllipsoid=this.showThroughEllipsoid,this.modelMatrix=c.clone(o(i.modelMatrix,c.IDENTITY)),this._modelMatrix=new c,this.radius=o(i.radius,Number.POSITIVE_INFINITY),this._directions=void 0,this._directionsDirty=!1,this.directions=s(i.directions)?i.directions:[],this.lateralSurfaceMaterial=s(i.lateralSurfaceMaterial)?i.lateralSurfaceMaterial:S.fromType(S.ColorType),this._lateralSurfaceMaterial=void 0,this._translucent=void 0,this.intersectionColor=t.clone(o(i.intersectionColor,t.WHITE)),this.intersectionWidth=o(i.intersectionWidth,5),this.id=i.id,this._id=void 0;var r=this;this._uniforms={u_showThroughEllipsoid:function(){return r.showThroughEllipsoid},u_showIntersection:function(){return r.showIntersection},u_sensorRadius:function(){return isFinite(r.radius)?r.radius:E},u_intersectionColor:function(){return r.intersectionColor},u_intersectionWidth:function(){return r.intersectionWidth},u_normalDirection:function(){return 1}},this._mode=w.SCENE3D};a(b.prototype,{directions:{get:function(){return this._directions},set:function(e){this._directions=e,this._directionsDirty=!0}}});var I=new i,V=new i,P=new i,T=new i;return b.prototype.update=function(i,t,n){if(this._mode=t.mode,this.show&&this._mode===w.SCENE3D){var o=this.lateralSurfaceMaterial.isTranslucent();if(this._showThroughEllipsoid!==this.showThroughEllipsoid||!s(this._frontFaceColorCommand.renderState)||this._translucent!==o){this._showThroughEllipsoid=this.showThroughEllipsoid,this._translucent=o;var a;o?(a=i.createRenderState({depthTest:{enabled:!this.showThroughEllipsoid},depthMask:!1,blending:g.ALPHA_BLEND,cull:{enabled:!0,face:v.BACK}}),this._frontFaceColorCommand.renderState=a,this._frontFaceColorCommand.pass=y.TRANSLUCENT,a=i.createRenderState({depthTest:{enabled:!this.showThroughEllipsoid},depthMask:!1,blending:g.ALPHA_BLEND,cull:{enabled:!0,face:v.FRONT}}),this._backFaceColorCommand.renderState=a,this._backFaceColorCommand.pass=y.TRANSLUCENT,a=i.createRenderState({depthTest:{enabled:!this.showThroughEllipsoid},depthMask:!1,blending:g.ALPHA_BLEND}),this._pickCommand.renderState=a):(a=i.createRenderState({depthTest:{enabled:!0},depthMask:!0}),this._frontFaceColorCommand.renderState=a,this._frontFaceColorCommand.pass=y.OPAQUE,a=i.createRenderState({depthTest:{enabled:!0},depthMask:!0}),this._pickCommand.renderState=a)}var l=this._directionsDirty;if(l){this._directionsDirty=!1,this._va=this._va&&this._va.destroy();var u=this._directions;u&&u.length>=3&&(this._frontFaceColorCommand.vertexArray=M(this,i),this._backFaceColorCommand.vertexArray=this._frontFaceColorCommand.vertexArray,this._pickCommand.vertexArray=this._frontFaceColorCommand.vertexArray)}if(s(this._frontFaceColorCommand.vertexArray)){var h=t.passes,d=!c.equals(this.modelMatrix,this._modelMatrix);d&&c.clone(this.modelMatrix,this._modelMatrix),(l||d)&&e.transform(this._boundingSphere,this.modelMatrix,this._boundingSphereWC),this._frontFaceColorCommand.modelMatrix=this.modelMatrix,this._backFaceColorCommand.modelMatrix=this._frontFaceColorCommand.modelMatrix,this._pickCommand.modelMatrix=this._frontFaceColorCommand.modelMatrix;var f=this._lateralSurfaceMaterial!==this.lateralSurfaceMaterial;if(this._lateralSurfaceMaterial=this.lateralSurfaceMaterial,this._lateralSurfaceMaterial.update(i),h.render){var S=this._frontFaceColorCommand,A=this._backFaceColorCommand;if(f||!s(S.shaderProgram)){var E=m({sources:[_,this._lateralSurfaceMaterial.shaderSource,C]});S.shaderProgram=i.replaceShaderProgram(S.shaderProgram,p,E,x),S.uniformMap=r(this._uniforms,this._lateralSurfaceMaterial._uniforms),A.shaderProgram=S.shaderProgram,A.uniformMap=r(this._uniforms,this._lateralSurfaceMaterial._uniforms),A.uniformMap.u_normalDirection=function(){return-1}}o?n.push(this._backFaceColorCommand,this._frontFaceColorCommand):n.push(this._frontFaceColorCommand)}if(h.pick){var b=this._pickCommand;if(s(this._pickId)&&this._id===this.id||(this._id=this.id,this._pickId=this._pickId&&this._pickId.destroy(),this._pickId=i.createPickId({primitive:this._pickPrimitive,id:this.id})),f||!s(b.shaderProgram)){var I=m({sources:[_,this._lateralSurfaceMaterial.shaderSource,C],pickColorQualifier:"uniform"});b.shaderProgram=i.replaceShaderProgram(b.shaderProgram,p,I,x);var V=this,P={czm_pickColor:function(){return V._pickId.color}};b.uniformMap=r(r(this._uniforms,this._lateralSurfaceMaterial._uniforms),P)}b.pass=o?y.TRANSLUCENT:y.OPAQUE,n.push(b)}}}},b.prototype.isDestroyed=function(){return!1},b.prototype.destroy=function(){return this._frontFaceColorCommand.vertexArray=this._frontFaceColorCommand.vertexArray&&this._frontFaceColorCommand.vertexArray.destroy(),this._frontFaceColorCommand.shaderProgram=this._frontFaceColorCommand.shaderProgram&&this._frontFaceColorCommand.shaderProgram.destroy(),this._pickCommand.shaderProgram=this._pickCommand.shaderProgram&&this._pickCommand.shaderProgram.destroy(),this._pickId=this._pickId&&this._pickId.destroy(),l(this)},b}),t("ConicSensorVisualizer",["Cesium/Core/AssociativeArray","Cesium/Core/Cartesian3","Cesium/Core/Color","Cesium/Core/defined","Cesium/Core/destroyObject","Cesium/Core/DeveloperError","Cesium/Core/Math","Cesium/Core/Matrix3","Cesium/Core/Matrix4","Cesium/Core/Quaternion","Cesium/Core/Spherical","./CustomSensorVolume","Cesium/DataSources/MaterialProperty","Cesium/DataSources/Property"],function(e,i,t,r,n,o,s,a,l,u,c,h,d,m){"use strict";function f(e,i,t,n){var o=i[e];r(o)||(i[e]=o=new c),o.clock=t,o.cone=n,o.magnitude=1}function C(e,i,t,r,n){var o,a=e.directions,l=0,u=s.toRadians(2);if(0===i&&t===s.TWO_PI)for(o=0;o<s.TWO_PI;o+=u)f(l++,a,o,n);else{for(o=i;t>o;o+=u)f(l++,a,o,n);if(f(l++,a,t,n),r){for(o=t;o>i;o-=u)f(l++,a,o,r);f(l++,a,i,r)}else f(l++,a,t,0)}a.length=l,e.directions=a}function p(e,i,t){var n=i[e.id];if(r(n)){var o=n.primitive;t.remove(o),o.isDestroyed()||o.destroy(),delete i[e.id]}}var _=t.WHITE,g=1,v=Number.POSITIVE_INFINITY,S=new a,y=new i,w=new u,A=function(i,t){t.collectionChanged.addEventListener(A.prototype._onCollectionChanged,this),this._scene=i,this._primitives=i.primitives,this._entityCollection=t,this._hash={},this._entitiesToVisualize=new e,this._onCollectionChanged(t,t.entities,[],[])};return A.prototype.update=function(e){for(var t=this._entitiesToVisualize.values,n=this._hash,o=this._primitives,c=0,f=t.length;f>c;c++){var p,A,M=t[c],x=M._conicSensor,E=n[M.id],b=M.isAvailable(e)&&m.getValueOrDefault(x._show,e,!0);if(b&&(p=m.getValueOrUndefined(M._position,e,y),A=m.getValueOrUndefined(M._orientation,e,w),b=r(p)&&r(A)),b){var I=r(E)?E.primitive:void 0;r(I)||(I=new h,I.id=M,o.add(I),E={primitive:I,position:void 0,orientation:void 0,minimumClockAngle:void 0,maximumClockAngle:void 0,innerHalfAngle:void 0,outerHalfAngle:void 0},n[M.id]=E),i.equals(p,E.position)&&u.equals(A,E.orientation)||(l.fromRotationTranslation(a.fromQuaternion(A,S),p,I.modelMatrix),E.position=i.clone(p,E.position),E.orientation=u.clone(A,E.orientation)),I.show=!0;var V=m.getValueOrDefault(x._minimumClockAngle,e,0),P=m.getValueOrDefault(x._maximumClockAngle,e,s.TWO_PI),T=m.getValueOrDefault(x._innerHalfAngle,e,0),D=m.getValueOrDefault(x._outerHalfAngle,e,Math.PI);(V!==E.minimumClockAngle||P!==E.maximumClockAngle||T!==E.innerHalfAngle||D!==E.outerHalfAngle)&&(C(I,V,P,T,D),E.innerHalfAngle=T,E.maximumClockAngle=P,E.outerHalfAngle=D,E.minimumClockAngle=V),I.radius=m.getValueOrDefault(x._radius,e,v),I.lateralSurfaceMaterial=d.getValue(e,x._lateralSurfaceMaterial,I.lateralSurfaceMaterial),I.intersectionColor=m.getValueOrClonedDefault(x._intersectionColor,e,_,I.intersectionColor),I.intersectionWidth=m.getValueOrDefault(x._intersectionWidth,e,g)}else r(E)&&(E.primitive.show=!1)}return!0},A.prototype.isDestroyed=function(){return!1},A.prototype.destroy=function(){for(var e=this._entitiesToVisualize.values,i=this._hash,t=this._primitives,r=e.length-1;r>-1;r--)p(e[r],i,t);return n(this)},A.prototype._onCollectionChanged=function(e,i,t,n){var o,s,a=this._entitiesToVisualize,l=this._hash,u=this._primitives;for(o=i.length-1;o>-1;o--)s=i[o],r(s._conicSensor)&&r(s._position)&&r(s._orientation)&&a.set(s.id,s);for(o=n.length-1;o>-1;o--)s=n[o],r(s._conicSensor)&&r(s._position)&&r(s._orientation)?a.set(s.id,s):(p(s,l,u),a.remove(s.id));for(o=t.length-1;o>-1;o--)s=t[o],p(s,l,u),a.remove(s.id)},A}),t("CustomPatternSensorGraphics",["Cesium/Core/defaultValue","Cesium/Core/defined","Cesium/Core/defineProperties","Cesium/Core/DeveloperError","Cesium/Core/Event","Cesium/DataSources/createPropertyDescriptor"],function(e,i,t,r,n,o){"use strict";var s=function(){this._directions=void 0,this._directionsSubscription=void 0,this._lateralSurfaceMaterial=void 0,this._lateralSurfaceMaterialSubscription=void 0,this._intersectionColor=void 0,this._intersectionColorSubscription=void 0,this._intersectionWidth=void 0,this._intersectionWidthSubscription=void 0,this._showIntersection=void 0,this._showIntersectionSubscription=void 0,this._radius=void 0,this._radiusSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._definitionChanged=new n};return t(s.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},directions:o("directions"),lateralSurfaceMaterial:o("lateralSurfaceMaterial"),intersectionColor:o("intersectionColor"),intersectionWidth:o("intersectionWidth"),showIntersection:o("showIntersection"),radius:o("radius"),show:o("show")}),s.prototype.clone=function(e){return i(e)||(e=new s),e.directions=this.directions,e.radius=this.radius,e.show=this.show,e.showIntersection=this.showIntersection,e.intersectionColor=this.intersectionColor,e.intersectionWidth=this.intersectionWidth,e.lateralSurfaceMaterial=this.lateralSurfaceMaterial,e},s.prototype.merge=function(i){this.directions=e(this.directions,i.directions),this.radius=e(this.radius,i.radius),this.show=e(this.show,i.show),this.showIntersection=e(this.showIntersection,i.showIntersection),this.intersectionColor=e(this.intersectionColor,i.intersectionColor),this.intersectionWidth=e(this.intersectionWidth,i.intersectionWidth),this.lateralSurfaceMaterial=e(this.lateralSurfaceMaterial,i.lateralSurfaceMaterial)},s}),t("CustomPatternSensorVisualizer",["Cesium/Core/AssociativeArray","Cesium/Core/Cartesian3","Cesium/Core/Color","Cesium/Core/defined","Cesium/Core/destroyObject","Cesium/Core/DeveloperError","Cesium/Core/Matrix3","Cesium/Core/Matrix4","Cesium/Core/Quaternion","./CustomSensorVolume","Cesium/DataSources/MaterialProperty","Cesium/DataSources/Property"],function(e,i,t,r,n,o,s,a,l,u,c,h){"use strict";function d(e,i,t){var n=i[e.id];if(r(n)){var o=n.primitive;t.remove(o),o.isDestroyed()||o.destroy(),delete i[e.id]}}var m=t.WHITE,f=1,C=Number.POSITIVE_INFINITY,p=new s,_=new i,g=new l,v=function(i,t){t.collectionChanged.addEventListener(v.prototype._onCollectionChanged,this),this._scene=i,this._primitives=i.primitives,this._entityCollection=t,this._hash={},this._entitiesToVisualize=new e,this._onCollectionChanged(t,t.entities,[],[])};return v.prototype.update=function(e){for(var t=this._entitiesToVisualize.values,n=this._hash,o=this._primitives,d=0,v=t.length;v>d;d++){var S,y,w,A=t[d],M=A._customPatternSensor,x=n[A.id],E=A.isAvailable(e)&&h.getValueOrDefault(M._show,e,!0);if(E&&(S=h.getValueOrUndefined(A._position,e,_),y=h.getValueOrUndefined(A._orientation,e,g),w=h.getValueOrUndefined(M._directions,e),E=r(S)&&r(y)&&r(w)),E){var b=r(x)?x.primitive:void 0;r(b)||(b=new u,b.id=A,o.add(b),x={primitive:b,position:void 0,orientation:void 0},n[A.id]=x),i.equals(S,x.position)&&l.equals(y,x.orientation)||(a.fromRotationTranslation(s.fromQuaternion(y,p),S,b.modelMatrix),x.position=i.clone(S,x.position),x.orientation=l.clone(y,x.orientation)),b.show=!0,b.directions=w,b.radius=h.getValueOrDefault(M._radius,e,C),b.lateralSurfaceMaterial=c.getValue(e,M._lateralSurfaceMaterial,b.lateralSurfaceMaterial),b.intersectionColor=h.getValueOrClonedDefault(M._intersectionColor,e,m,b.intersectionColor),b.intersectionWidth=h.getValueOrDefault(M._intersectionWidth,e,f)}else r(x)&&(x.primitive.show=!1)}return!0},v.prototype.isDestroyed=function(){return!1},v.prototype.destroy=function(){for(var e=this._entitiesToVisualize.values,i=this._hash,t=this._primitives,r=e.length-1;r>-1;r--)d(e[r],i,t);return n(this)},v.prototype._onCollectionChanged=function(e,i,t,n){var o,s,a=this._entitiesToVisualize,l=this._hash,u=this._primitives;for(o=i.length-1;o>-1;o--)s=i[o],r(s._customPatternSensor)&&r(s._position)&&r(s._orientation)&&a.set(s.id,s);for(o=n.length-1;o>-1;o--)s=n[o],r(s._customPatternSensor)&&r(s._position)&&r(s._orientation)?a.set(s.id,s):(d(s,l,u),a.remove(s.id));for(o=t.length-1;o>-1;o--)s=t[o],d(s,l,u),a.remove(s.id)},v}),t("RectangularSensorGraphics",["Cesium/Core/defaultValue","Cesium/Core/defined","Cesium/Core/defineProperties","Cesium/Core/DeveloperError","Cesium/Core/Event","Cesium/DataSources/createPropertyDescriptor"],function(e,i,t,r,n,o){"use strict";var s=function(){this._xHalfAngle=void 0,this._xHalfAngleSubscription=void 0,this._yHalfAngle=void 0,this._yHalfAngleSubscription=void 0,this._lateralSurfaceMaterial=void 0,this._lateralSurfaceMaterialSubscription=void 0,this._intersectionColor=void 0,this._intersectionColorSubscription=void 0,this._intersectionWidth=void 0,this._intersectionWidthSubscription=void 0,this._showIntersection=void 0,this._showIntersectionSubscription=void 0,this._radius=void 0,this._radiusSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._definitionChanged=new n};return t(s.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},xHalfAngle:o("xHalfAngle"),yHalfAngle:o("yHalfAngle"),lateralSurfaceMaterial:o("lateralSurfaceMaterial"),intersectionColor:o("intersectionColor"),intersectionWidth:o("intersectionWidth"),showIntersection:o("showIntersection"),radius:o("radius"),show:o("show")}),s.prototype.clone=function(e){return i(e)||(e=new s),e.xHalfAngle=this.xHalfAngle,e.yHalfAngle=this.yHalfAngle,e.radius=this.radius,e.show=this.show,e.showIntersection=this.showIntersection,e.intersectionColor=this.intersectionColor,e.intersectionWidth=this.intersectionWidth,e.lateralSurfaceMaterial=this.lateralSurfaceMaterial,e},s.prototype.merge=function(i){this.xHalfAngle=e(this.xHalfAngle,i.xHalfAngle),this.yHalfAngle=e(this.yHalfAngle,i.yHalfAngle),this.radius=e(this.radius,i.radius),this.show=e(this.show,i.show),this.showIntersection=e(this.showIntersection,i.showIntersection),this.intersectionColor=e(this.intersectionColor,i.intersectionColor),this.intersectionWidth=e(this.intersectionWidth,i.intersectionWidth),this.lateralSurfaceMaterial=e(this.lateralSurfaceMaterial,i.lateralSurfaceMaterial)},s}),t("RectangularPyramidSensorVolume",["Cesium/Core/clone","Cesium/Core/defaultValue","Cesium/Core/defined","Cesium/Core/defineProperties","Cesium/Core/destroyObject","Cesium/Core/DeveloperError","Cesium/Core/Math","Cesium/Core/Spherical","./CustomSensorVolume"],function(e,i,t,r,n,o,s,a,l){"use strict";function u(e,i,r,n){var o=i[e];t(o)||(i[e]=o=new a),o.clock=r,o.cone=n,o.magnitude=1}function c(e){var i=e._customSensor.directions,t=Math.tan(Math.min(e._xHalfAngle,s.toRadians(89))),r=Math.tan(Math.min(e._yHalfAngle,s.toRadians(89))),n=Math.atan(t/r),o=Math.atan(Math.sqrt(t*t+r*r));u(0,i,n,o),u(1,i,s.toRadians(180)-n,o),u(2,i,s.toRadians(180)+n,o),u(3,i,-n,o),i.length=4,e._customSensor.directions=i}var h=function(t){t=i(t,i.EMPTY_OBJECT);var r=e(t);r._pickPrimitive=i(t._pickPrimitive,this),r.directions=void 0,this._customSensor=new l(r),this._xHalfAngle=i(t.xHalfAngle,s.PI_OVER_TWO),this._yHalfAngle=i(t.yHalfAngle,s.PI_OVER_TWO),c(this)};return r(h.prototype,{xHalfAngle:{get:function(){return this._xHalfAngle},set:function(e){this._xHalfAngle!==e&&(this._xHalfAngle=e,c(this))}},yHalfAngle:{get:function(){return this._yHalfAngle},set:function(e){this._yHalfAngle!==e&&(this._yHalfAngle=e,c(this))}},show:{get:function(){return this._customSensor.show},set:function(e){this._customSensor.show=e}},showIntersection:{get:function(){return this._customSensor.showIntersection},set:function(e){this._customSensor.showIntersection=e}},showThroughEllipsoid:{get:function(){return this._customSensor.showThroughEllipsoid},set:function(e){this._customSensor.showThroughEllipsoid=e}},modelMatrix:{get:function(){return this._customSensor.modelMatrix},set:function(e){this._customSensor.modelMatrix=e}},radius:{get:function(){return this._customSensor.radius},set:function(e){this._customSensor.radius=e}},lateralSurfaceMaterial:{get:function(){return this._customSensor.lateralSurfaceMaterial},set:function(e){this._customSensor.lateralSurfaceMaterial=e}},intersectionColor:{get:function(){return this._customSensor.intersectionColor},set:function(e){this._customSensor.intersectionColor=e}},intersectionWidth:{get:function(){return this._customSensor.intersectionWidth},set:function(e){this._customSensor.intersectionWidth=e}},id:{get:function(){return this._customSensor.id},set:function(e){this._customSensor.id=e}}}),h.prototype.update=function(e,i,t){this._customSensor.update(e,i,t)},h.prototype.isDestroyed=function(){return!1},h.prototype.destroy=function(){return this._customSensor=this._customSensor&&this._customSensor.destroy(),n(this)},h}),t("RectangularSensorVisualizer",["Cesium/Core/AssociativeArray","Cesium/Core/Cartesian3","Cesium/Core/Color","Cesium/Core/defined","Cesium/Core/destroyObject","Cesium/Core/DeveloperError","Cesium/Core/Math","Cesium/Core/Matrix3","Cesium/Core/Matrix4","Cesium/Core/Quaternion","./RectangularPyramidSensorVolume","Cesium/DataSources/MaterialProperty","Cesium/DataSources/Property"],function(e,i,t,r,n,o,s,a,l,u,c,h,d){"use strict";function m(e,i,t){var n=i[e.id];if(r(n)){var o=n.primitive;t.remove(o),o.isDestroyed()||o.destroy(),delete i[e.id]}}var f=t.WHITE,C=1,p=Number.POSITIVE_INFINITY,_=new a,g=new i,v=new u,S=function(i,t){t.collectionChanged.addEventListener(S.prototype._onCollectionChanged,this),this._scene=i,this._primitives=i.primitives,this._entityCollection=t,this._hash={},this._entitiesToVisualize=new e,this._onCollectionChanged(t,t.entities,[],[])};return S.prototype.update=function(e){for(var t=this._entitiesToVisualize.values,n=this._hash,o=this._primitives,m=0,S=t.length;S>m;m++){var y,w,A=t[m],M=A._rectangularSensor,x=n[A.id],E=A.isAvailable(e)&&d.getValueOrDefault(M._show,e,!0);
if(E&&(y=d.getValueOrUndefined(A._position,e,g),w=d.getValueOrUndefined(A._orientation,e,v),E=r(y)&&r(w)),E){var b=r(x)?x.primitive:void 0;r(b)||(b=new c,b.id=A,o.add(b),x={primitive:b,position:void 0,orientation:void 0},n[A.id]=x),i.equals(y,x.position)&&u.equals(w,x.orientation)||(l.fromRotationTranslation(a.fromQuaternion(w,_),y,b.modelMatrix),x.position=i.clone(y,x.position),x.orientation=u.clone(w,x.orientation)),b.show=!0,b.xHalfAngle=d.getValueOrDefault(M._xHalfAngle,e,s.PI_OVER_TWO),b.yHalfAngle=d.getValueOrDefault(M._yHalfAngle,e,s.PI_OVER_TWO),b.radius=d.getValueOrDefault(M._radius,e,p),b.lateralSurfaceMaterial=h.getValue(e,M._lateralSurfaceMaterial,b.lateralSurfaceMaterial),b.intersectionColor=d.getValueOrClonedDefault(M._intersectionColor,e,f,b.intersectionColor),b.intersectionWidth=d.getValueOrDefault(M._intersectionWidth,e,C)}else r(x)&&(x.primitive.show=!1)}return!0},S.prototype.isDestroyed=function(){return!1},S.prototype.destroy=function(){for(var e=this._entitiesToVisualize.values,i=this._hash,t=this._primitives,r=e.length-1;r>-1;r--)m(e[r],i,t);return n(this)},S.prototype._onCollectionChanged=function(e,i,t,n){var o,s,a=this._entitiesToVisualize,l=this._hash,u=this._primitives;for(o=i.length-1;o>-1;o--)s=i[o],r(s._rectangularSensor)&&r(s._position)&&r(s._orientation)&&a.set(s.id,s);for(o=n.length-1;o>-1;o--)s=n[o],r(s._rectangularSensor)&&r(s._position)&&r(s._orientation)?a.set(s.id,s):(m(s,l,u),a.remove(s.id));for(o=t.length-1;o>-1;o--)s=t[o],m(s,l,u),a.remove(s.id)},S}),t("initialize",["Cesium/Core/Cartesian3","Cesium/Core/Color","Cesium/Core/defined","Cesium/Core/Spherical","Cesium/Core/TimeInterval","Cesium/DataSources/CzmlDataSource","Cesium/DataSources/DataSourceDisplay","./ConicSensorGraphics","./ConicSensorVisualizer","./CustomPatternSensorGraphics","./CustomPatternSensorVisualizer","./RectangularSensorGraphics","./RectangularSensorVisualizer"],function(e,i,t,r,n,o,s,a,l,u,c,h,d){"use strict";function m(i,n,o,s,a){var l,u,c=[],h=n.unitSpherical,d=n.spherical,m=n.unitCartesian,f=n.cartesian;if(t(h)){for(l=0,u=h.length;u>l;l+=2)c.push(new r(h[l],h[l+1]));n.array=c}else if(t(d)){for(l=0,u=d.length;u>l;l+=3)c.push(new r(d[l],d[l+1],d[l+2]));n.array=c}else if(t(m)){for(l=0,u=m.length;u>l;l+=3){var C=r.fromCartesian3(new e(m[l],m[l+1],m[l+2]));r.normalize(C,C),c.push(C)}n.array=c}else if(t(f)){for(l=0,u=f.length;u>l;l+=3)c.push(r.fromCartesian3(new e(f[l],f[l+1],f[l+2])));n.array=c}g(Array,i,"directions",n,o,s,a)}function f(e,t,r,n,o){g(Boolean,e,"show",t.show,r,n,o),g(Number,e,"radius",t.radius,r,n,o),g(Boolean,e,"showIntersection",t.showIntersection,r,n,o),g(i,e,"intersectionColor",t.intersectionColor,r,n,o),g(Number,e,"intersectionWidth",t.intersectionWidth,r,n,o),v(e,"lateralSurfaceMaterial",t.lateralSurfaceMaterial,r,n,o)}function C(e,i,r,o){var s=i.agi_conicSensor;if(t(s)){var l,u=s.interval;t(u)&&(S.iso8601=u,l=n.fromIso8601(S));var c=e.conicSensor;t(c)||(e.addProperty("conicSensor"),e.conicSensor=c=new a),f(c,s,l,o,r),g(Number,c,"innerHalfAngle",s.innerHalfAngle,l,o,r),g(Number,c,"outerHalfAngle",s.outerHalfAngle,l,o,r),g(Number,c,"minimumClockAngle",s.minimumClockAngle,l,o,r),g(Number,c,"maximumClockAngle",s.maximumClockAngle,l,o,r)}}function p(e,i,r,o){var s=i.agi_customPatternSensor;if(t(s)){var a,l=s.interval;t(l)&&(S.iso8601=l,a=n.fromIso8601(S));var c=e.customPatternSensor;t(c)||(e.addProperty("customPatternSensor"),e.customPatternSensor=c=new u),f(c,s,a,o,r);var h=s.directions;if(t(h))if(Array.isArray(h))for(var d=h.length,C=0;d>C;C++)m(c,h[C],a,o,r);else m(c,h,a,o,r)}}function _(e,i,r,o){var s=i.agi_rectangularSensor;if(t(s)){var a,l=s.interval;t(l)&&(S.iso8601=l,a=n.fromIso8601(S));var u=e.rectangularSensor;t(u)||(e.addProperty("rectangularSensor"),e.rectangularSensor=u=new h),f(u,s,a,o,r),g(Number,u,"xHalfAngle",s.xHalfAngle,a,o,r),g(Number,u,"yHalfAngle",s.yHalfAngle,a,o,r)}}var g=o.processPacketData,v=o.processMaterialPacketData,S={iso8601:void 0},y=!1,w=function(){if(!y){o.updaters.push(C,p,_);var e=s.defaultVisualizersCallback;s.defaultVisualizersCallback=function(i,t){var r=t.entities,n=e(i,t);return n.concat([new l(i,r),new c(i,r),new d(i,r)])},y=!0}};return w}),t("CesiumSensors",["./initialize","./ConicSensorGraphics","./ConicSensorVisualizer","./CustomPatternSensorGraphics","./CustomPatternSensorVisualizer","./CustomSensorVolume","./RectangularPyramidSensorVolume","./RectangularSensorGraphics","./RectangularSensorVisualizer"],function(e,i,t,r,n,o,s,a,l){"use strict";return e(),{ConicSensorGraphics:i,ConicSensorVisualizer:t,CustomPatternSensorGraphics:r,CustomPatternSensorVisualizer:n,CustomSensorVolume:o,RectangularPyramidSensorVolume:s,RectangularSensorGraphics:a,RectangularSensorVisualizer:l}}),function(){"use strict";t("Cesium/Core/defaultValue",function(){return Cesium.defaultValue}),t("Cesium/Core/defined",function(){return Cesium.defined}),t("Cesium/Core/defineProperties",function(){return Cesium.defineProperties}),t("Cesium/Core/DeveloperError",function(){return Cesium.DeveloperError}),t("Cesium/Core/Event",function(){return Cesium.Event}),t("Cesium/DataSources/createPropertyDescriptor",function(){return Cesium.createPropertyDescriptor}),t("Cesium/Core/AssociativeArray",function(){return Cesium.AssociativeArray}),t("Cesium/Core/Cartesian3",function(){return Cesium.Cartesian3}),t("Cesium/Core/Color",function(){return Cesium.Color}),t("Cesium/Core/destroyObject",function(){return Cesium.destroyObject}),t("Cesium/Core/Math",function(){return Cesium.Math}),t("Cesium/Core/Matrix3",function(){return Cesium.Matrix3}),t("Cesium/Core/Matrix4",function(){return Cesium.Matrix4}),t("Cesium/Core/Quaternion",function(){return Cesium.Quaternion}),t("Cesium/Core/Spherical",function(){return Cesium.Spherical}),t("Cesium/DataSources/MaterialProperty",function(){return Cesium.MaterialProperty}),t("Cesium/DataSources/Property",function(){return Cesium.Property}),t("Cesium/Core/BoundingSphere",function(){return Cesium.BoundingSphere}),t("Cesium/Core/combine",function(){return Cesium.combine}),t("Cesium/Core/ComponentDatatype",function(){return Cesium.ComponentDatatype}),t("Cesium/Core/PrimitiveType",function(){return Cesium.PrimitiveType}),t("Cesium/Renderer/BufferUsage",function(){return Cesium.BufferUsage}),t("Cesium/Renderer/createShaderSource",function(){return Cesium.createShaderSource}),t("Cesium/Renderer/DrawCommand",function(){return Cesium.DrawCommand}),t("Cesium/Scene/BlendingState",function(){return Cesium.BlendingState}),t("Cesium/Scene/CullFace",function(){return Cesium.CullFace}),t("Cesium/Scene/Material",function(){return Cesium.Material}),t("Cesium/Scene/Pass",function(){return Cesium.Pass}),t("Cesium/Scene/SceneMode",function(){return Cesium.SceneMode}),t("Cesium/Core/TimeInterval",function(){return Cesium.TimeInterval}),t("Cesium/DataSources/CzmlDataSource",function(){return Cesium.CzmlDataSource}),t("Cesium/DataSources/DataSourceDisplay",function(){return Cesium.DataSourceDisplay}),t("Cesium/Core/clone",function(){return Cesium.clone}),i(["CesiumSensors"],function(e){var i="undefined"!=typeof window?window:"undefined"!=typeof self?self:{};i.CesiumSensors=e},void 0,!0)}()}();